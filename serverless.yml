org: robjy
app: test-wsgi-2
service: test-wsgi-2

frameworkVersion: '3'

custom:
  wsgi:
    app: app.app
  tableName: '${file(./vars.yml):image_table_name}-${self:provider.stage}'
  textMimeTypes:
    - text/plain

provider:
  name: aws
  runtime: python3.10
  # architecture: arm64
  stage: dev
  region: '${file(./vars.yml):aws_region}'
  deploymentBucket:
    name: ${file(./vars.yml):bucket_serverless}
  environment:
    IMAGES_TABLE: ${self:custom.tableName}
    STRIP_STAGE_PATH: yes
  #apiGateway:
  #  binaryMediaTypes:
  #    - "*/*"

  iam:
    role:
      statements:
        - Effect: Allow
          Action: "s3:*"
          Resource: 
            - "arn:aws:s3:::${file(./vars.yml):bucket_data}"
            - "arn:aws:s3:::${file(./vars.yml):bucket_data}/*"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "Fn::GetAtt": [RobImagesDynamoDBTable, Arn]

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    RobImagesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: imageId
            AttributeType: S
        KeySchema:
          - AttributeName: imageId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

plugins:
  - serverless-dynamodb-local
  - serverless-python-requirements
  - serverless-wsgi